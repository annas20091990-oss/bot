import telebot
import sqlite3
import os
import time
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
try:
    TOKEN = os.environ['TOKEN']
    bot = telebot.TeleBot(TOKEN)
    logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
except KeyError:
    logger.critical("–û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    exit(1)
except Exception as e:
    logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {str(e)}")
    exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def init_database():
    try:
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        conn = sqlite3.connect('users.db', check_same_thread=False)
        cursor = conn.cursor()
        
        cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER UNIQUE,
            user_name TEXT,
            firstname TEXT,
            lastname TEXT,
            registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
        ''')
        conn.commit()
        logger.info("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        return conn, cursor
    except sqlite3.Error as e:
        logger.error(f"–û—à–∏–±–∫–∞ SQLite: {str(e)}")
        logger.critical("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
        exit(1)
    except Exception as e:
        logger.critical(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {str(e)}")
        exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
conn, cursor = init_database()

@bot.message_handler(commands=['start'])
def start(message):
    try:
        user_id = message.from_user.id
        user_name = message.from_user.username or "N/A"
        firstname = message.from_user.first_name or "N/A"
        lastname = message.from_user.last_name or "N/A"
        
        logger.info(f"–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å /start –æ—Ç {user_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        if not cursor.fetchone():
            cursor.execute(
                '''
            INSERT INTO users (user_id, user_name, firstname, lastname)
            VALUES(?, ?, ?, ?)
            ''', (user_id, user_name, firstname, lastname))
            conn.commit()
            logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}")
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            message.chat.id, 
            '<b>TrendScope - –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∞–Ω–∞–ª–∏–∑–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</b>üîç.\n\n'
            '‚Ä¢ <b>–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç</b> –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤\n'
            '‚Ä¢ <b>–û—Ü–µ–Ω–∫–∞</b> <b>–¥–∏–Ω–∞–º–∏–∫–∏</b> –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–æ–≤—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π\n'
            '‚Ä¢ <b>–ö–æ–Ω—Ç—Ä–æ–ª—å</b> –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ 1, 3, 24 —á–∞—Å–∞ –∏ 7 –¥–Ω–µ–π\n\n'
            '<b>–ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö —Å –≤—ã—Å–æ–∫–æ–π –¥–∏–Ω–∞–º–∏–∫–æ–π:</b> üí¨\n'
            '‚Üí –°—Å—ã–ª–∫–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏\n'
            '‚Üí –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏\n'
            '‚Üí –†–∞–Ω–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤\n\n'
            '–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n'
            '–≤–º–µ—Å—Ç–æ —Ä—É—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞. –ù–∞—à —Å–µ—Ä–≤–∏—Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Ç—Ä–µ–Ω–¥—ã –∑–∞ –≤–∞—Å.\n\n'
            '–ì–æ—Ç–æ–≤—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É?\n' 
            '–ù–∞–ø–∏—à–∏—Ç–µ <b>"–î–ê"</b> –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏.',
            parse_mode='html'
        )

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        manager_id = 5661996565
        bot.send_message(
            manager_id, 
            f'üî• –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å TrendScope!\n'
            f'ID: {user_id}\n'
            f'Username: @{user_name}\n'
            f'–ò–º—è: {firstname} {lastname}'
        )
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user_id}")
        
    except sqlite3.Error as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ë–î –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /start: {str(e)}")
        bot.reply_to(message, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /start: {str(e)}")
        bot.reply_to(message, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@bot.message_handler(func=lambda message: "–î–ê" in message.text.upper())
def handle_da(message):
    try:
        user_id = message.from_user.id
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∏–Ω—Ç–µ—Ä–µ—Å")
        
        bot.send_message(
            message.chat.id, 
            '‚úÖ –û—Ç–ª–∏—á–Ω–æ! –° –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏.'
        )
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        manager_id = 5661996565
        bot.send_message(
            manager_id, 
            f'üöÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∏–Ω—Ç–µ—Ä–µ—Å!\n'
            f'ID: {user_id}\n'
            f'–°–æ–æ–±—â–µ–Ω–∏–µ: "{message.text}"'
        )
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ—Ç {user_id}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {str(e)}")
        bot.reply_to(message, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.")

def run_bot():
    restart_count = 0
    max_restarts = 5
    
    while restart_count < max_restarts:
        try:
            users_count = cursor.execute('SELECT COUNT(*) FROM users').fetchone()[0]
            logger.info(f"–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: {users_count}")
            logger.info("–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
            
            bot.polling(none_stop=True, interval=2, timeout=20)
            
        except sqlite3.Error as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ë–î: {str(e)}")
            logger.info("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
            restart_count += 1
            time.sleep(10)
            
        except Exception as e:
            logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
            logger.info("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
            restart_count += 1
            time.sleep(10)
    
    logger.critical(f"–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–≤ ({max_restarts}). –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")

if __name__ == '__main__':
    try:
        logger.info("=" * 50)
        logger.info(f"–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã TrendScope Bot")
        logger.info(f"–¢–æ–∫–µ–Ω: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if os.environ.get('TOKEN') else '–ù–ï –ù–ê–ô–î–ï–ù!'}")
        logger.info(f"–í–µ—Ä—Å–∏—è pyTelegramBotAPI: {telebot.__version__}")
        logger.info("=" * 50)
        
        run_bot()
        
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    finally:
        try:
            if conn:
                conn.close()
                logger.info("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ")
        except:
            pass
        logger.info("–†–∞–±–æ—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
